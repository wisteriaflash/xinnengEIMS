<?php
//安装时需要初始化的SQL数据
$sql_string='DROP TABLE IF EXISTS `#@__addonarticle`;
CREATE TABLE `#@__addonarticle` (
  `aid` mediumint(8) unsigned NOT NULL default '0',
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `body` mediumtext,
  `redirecturl` varchar(255) NOT NULL default '',
  `templet` varchar(30) NOT NULL default '',
  `userip` char(15) NOT NULL default '',
  PRIMARY KEY  (`aid`),
  KEY `typeid` (`typeid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__addonproduct`;
CREATE TABLE `#@__addonproduct` (
  `aid` mediumint(8) unsigned NOT NULL default '0',
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `body` mediumtext,
  `brand` varchar(250) NOT NULL default '',
  `templet` varchar(30) NOT NULL default '',
  `userip` char(15) NOT NULL default '',
  `redirecturl` varchar(255) NOT NULL default '',
  `bigpic` mediumtext,
  `psize` varchar(250) NOT NULL default '',
  `rfprice` varchar(50) NOT NULL default '',
  `crunit` varchar(50) NOT NULL default '￥',
  `prunit` varchar(50) NOT NULL default '件',
  PRIMARY KEY  (`aid`),
  KEY `typeid` (`typeid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__admin`;
CREATE TABLE `#@__admin` (
  `id` int(10) unsigned NOT NULL default '0',
  `usertype` int(10) unsigned NOT NULL default '0',
  `userid` char(30) NOT NULL default '',
  `pwd` char(32) NOT NULL default '',
  `uname` char(20) NOT NULL default '',
  `tname` char(30) NOT NULL default '',
  `email` char(30) NOT NULL default '',
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `logintime` int(10) unsigned NOT NULL default '0',
  `loginip` varchar(20) NOT NULL default '',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__admintype`;
CREATE TABLE `#@__admintype` (
  `rank` smallint(6) NOT NULL default '1',
  `typename` varchar(30) NOT NULL default '',
  `system` smallint(6) NOT NULL default '0',
  `purviews` text,
  PRIMARY KEY  (`rank`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__admintype` VALUES (5, '普通发布员', 1, 't_AccList t_AccNew t_AccEdit t_AccDel a_AccNew a_AccList a_AccEdit a_AccDel a_AccCheck a_MyList a_MyEdit a_MyDel a_MyCheck co_AddNote co_EditNote co_PlayNote co_ListNote co_ViewNote spec_New spec_List spec_Edit sys_MdPwd sys_Log sys_ArcTj sys_Source sys_Writer sys_Keyword sys_MakeHtml sys_Feedback sys_Upload sys_MyUpload member_List member_Edit plus_站内新闻发布 plus_友情链接插件 plus_留言簿插件 plus_投票插件 plus_广告管理 '),
(10, '超级管理员', 1, 'admin_AllowAll ');

DROP TABLE IF EXISTS `#@__arcatt`;
CREATE TABLE `#@__arcatt` (
  `sortid` smallint(6) NOT NULL default '0',
  `att` char(10) NOT NULL default '',
  `attname` char(30) NOT NULL default '',
  PRIMARY KEY  (`att`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__arcatt` VALUES (5, 's', '滚动'),
(1, 'h', '头条'),
(4, 'f', '幻灯'),
(2, 'c', '推荐'),
(3, 'p', '图片'),
(6, 'j', '跳转'),
(7, 'a', '图文'),
(8, 'b', '加粗');

DROP TABLE IF EXISTS `#@__arccache`;
CREATE TABLE `#@__arccache` (
  `md5hash` char(32) NOT NULL default '',
  `stylehash` char(32) NOT NULL default '',
  `uptime` int(11) NOT NULL default '0',
  `cachedata` mediumtext,
  PRIMARY KEY  (`md5hash`),
  KEY `stylehash` (`stylehash`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__archives`;
CREATE TABLE `#@__archives` (
  `id` mediumint(8) unsigned NOT NULL default '0',
  `typeid` smallint(8) unsigned NOT NULL default '0',
  `sortrank` int(10) unsigned NOT NULL default '0',
  `flag` set('c','h','p','f','s','j','a','b') default NULL,
  `ismake` smallint(6) NOT NULL default '0',
  `channel` smallint(6) NOT NULL default '1',
  `arcrank` smallint(6) NOT NULL default '0',
  `click` mediumint(8) unsigned NOT NULL default '0',
  `title` char(80) NOT NULL default '',
  `color` char(7) NOT NULL default '',
  `writer` char(20) NOT NULL default '',
  `source` char(30) NOT NULL default '',
  `litpic` char(80) NOT NULL default '',
  `pubdate` int(10) unsigned NOT NULL default '0',
  `senddate` int(10) unsigned NOT NULL default '0',
  `mid` mediumint(8) unsigned NOT NULL default '0',
  `keywords` char(30) NOT NULL default '',
  `lastpost` int(10) unsigned NOT NULL default '0',
  `scores` mediumint(8) NOT NULL default '0',
  `notpost` tinyint(1) unsigned NOT NULL default '0',
  `description` varchar(255) NOT NULL default '',
  `filename` varchar(40) NOT NULL default '',
  PRIMARY KEY  (`id`),
  KEY `sortrank` (`sortrank`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__arcrank`;
CREATE TABLE `#@__arcrank` (
  `id` smallint(5) unsigned NOT NULL auto_increment,
  `rank` smallint(6) NOT NULL default '0',
  `membername` char(20) NOT NULL default '',
  `adminrank` smallint(6) NOT NULL default '0',
  `money` smallint(8) unsigned NOT NULL default '500',
  `scores` mediumint(8) NOT NULL default '0',
  `purviews` mediumtext,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__arcrank` VALUES (1, 0, '开放浏览', 5, 0, 0, ''),
(2, -1, '待审核稿件', 0, 0, 0, ''),
(3, 10, '注册会员', 5, 0, 100, ''),
(4, 50, '中级会员', 5, 300, 200, ''),
(5, 100, '高级会员', 5, 800, 500, ''),
(6, 200, '特别会员', 5, 500, 500, '');

DROP TABLE IF EXISTS `#@__arctiny`;
CREATE TABLE `#@__arctiny` (
  `id` mediumint(8) unsigned NOT NULL auto_increment,
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `arcrank` smallint(6) NOT NULL default '0',
  `channel` smallint(5) NOT NULL default '1',
  `senddate` int(10) unsigned NOT NULL default '0',
  `sortrank` int(10) unsigned NOT NULL default '0',
  `mid` mediumint(8) unsigned NOT NULL default '0',
  PRIMARY KEY  (`id`),
  KEY `sortrank` (`sortrank`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__arctype`;
CREATE TABLE `#@__arctype` (
  `id` smallint(5) unsigned NOT NULL auto_increment,
  `reid` smallint(5) unsigned NOT NULL default '0',
  `topid` smallint(5) unsigned NOT NULL default '0',
  `sortrank` smallint(5) unsigned NOT NULL default '50',
  `typename` char(30) NOT NULL default '',
  `lang` varchar(20) NOT NULL default 'gb2312',
  `typedir` char(60) NOT NULL default '',
  `isdefault` smallint(6) NOT NULL default '0',
  `defaultname` char(15) NOT NULL default 'index.html',
  `channeltype` smallint(6) default '1',
  `ispart` smallint(6) NOT NULL default '0',
  `tempsgpage` varchar(50) NOT NULL default '',
  `tempindex` char(50) NOT NULL default '',
  `templist` char(50) NOT NULL default '',
  `temparticle` char(50) NOT NULL default '',
  `namerule` char(50) NOT NULL default '',
  `namerule2` char(50) NOT NULL default '',
  `description` char(150) NOT NULL default '',
  `keywords` char(30) NOT NULL default '',
  `ishidden` smallint(6) NOT NULL default '0',
  `content` text,
  PRIMARY KEY  (`id`),
  KEY `sortrank` (`sortrank`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__channeltype`;
CREATE TABLE `#@__channeltype` (
  `id` smallint(6) NOT NULL default '0',
  `nid` varchar(20) NOT NULL default '',
  `typename` varchar(30) NOT NULL default '',
  `maintable` varchar(50) NOT NULL default '#@__archives',
  `addtable` varchar(50) NOT NULL default '',
  `addcon` varchar(30) NOT NULL default '',
  `mancon` varchar(30) NOT NULL default '',
  `editcon` varchar(30) NOT NULL default '',
  `useraddcon` varchar(30) NOT NULL default '',
  `usermancon` varchar(30) NOT NULL default '',
  `usereditcon` varchar(30) NOT NULL default '',
  `fieldset` text,
  `listfields` text,
  `allfields` text,
  `issystem` smallint(6) NOT NULL default '0',
  `isshow` smallint(6) NOT NULL default '1',
  `issend` smallint(6) NOT NULL default '0',
  `arcsta` smallint(6) NOT NULL default '-1',
  `usertype` char(10) NOT NULL default '',
  `sendrank` smallint(6) NOT NULL default '10',
  `isdefault` smallint(6) NOT NULL default '0',
  `needdes` tinyint(1) NOT NULL default '1',
  `needpic` tinyint(1) NOT NULL default '1',
  `titlename` varchar(20) NOT NULL default '标题',
  `onlyone` smallint(6) NOT NULL default '0',
  `dfcid` smallint(5) unsigned NOT NULL default '0',
  PRIMARY KEY  (`id`),
  KEY `nid` (`nid`,`isshow`,`arcsta`,`sendrank`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__channeltype` VALUES (1, 'article', '新闻动态', '#@__archives', '#@__addonarticle', 'article_add.php', 'content_list.php', 'article_edit.php', 'article_add.php', 'content_list.php', 'article_edit.php', '<field:body itemname="文章内容" autofield="0" notsend="0" type="htmltext" isnull="true" islist="1" default=""  maxlength="" page="split">\r\n</field:body>\r\n', '', '', 1, 1, 1, -1, '', 10, 0, 1, 1, '标题', 0, 0),
(6, 'product', '产品展示', '#@__archives', '#@__addonproduct', 'product_add.php', 'content_list.php', 'product_edit.php', 'product_add.php', 'content_list.php', 'product_edit.php', '<field:rfprice itemname="参考价格" autofield="1" notsend="0" type="text" isnull="true" islist="0" default=""  maxlength="50" page="">\r\n</field:rfprice>\r\n<field:psize itemname="产品规格" autofield="1" notsend="0" type="text" isnull="true" islist="0" default=""  maxlength="250" page="">\r\n</field:psize>\r\n<field:brand itemname="产品品牌" autofield="1" notsend="0" type="text" isnull="true" islist="1" default=""  maxlength="250" page="">\r\n</field:brand>\r\n<field:body itemname="详细介绍" autofield="0" notsend="0" type="htmltext" isnull="true" islist="0" default=""  maxlength="" page="">\r\n</field:body>\r\n<field:crunit itemname="货币单位" autofield="1" notsend="0" type="text" isnull="true" islist="0" default="￥"  maxlength="50" page="">\r\n</field:crunit>\r\n<field:prunit itemname="产品单位" autofield="1" notsend="0" type="text" isnull="true" islist="0" default="件"  maxlength="50" page="">\r\n</field:prunit>\r\n<field:bigpic itemname="产品大图" autofield="0" notsend="0" type="img" isnull="true" islist="0" default=""  maxlength="0" page="split">\r\n</field:bigpic>', 'brand,psize,rfprice', '', 0, 1, 1, -1, '企业', 10, 0, 1, 1, '产品名称', 0, 0);

DROP TABLE IF EXISTS `#@__co_htmls`;
CREATE TABLE `#@__co_htmls` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `nid` mediumint(8) unsigned NOT NULL default '0',
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `title` varchar(60) NOT NULL default '',
  `litpic` varchar(100) NOT NULL default '',
  `url` varchar(100) NOT NULL default '',
  `dtime` int(10) unsigned NOT NULL default '0',
  `isdown` tinyint(1) unsigned NOT NULL default '0',
  `isexport` tinyint(1) NOT NULL default '0',
  `result` mediumtext,
  PRIMARY KEY  (`aid`),
  KEY `nid` (`nid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__co_mediaurls`;
CREATE TABLE `#@__co_mediaurls` (
  `nid` mediumint(8) unsigned NOT NULL default '0',
  `hash` char(32) NOT NULL default '',
  `tofile` char(60) NOT NULL default '',
  KEY `hash` (`hash`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__co_note`;
CREATE TABLE `#@__co_note` (
  `nid` mediumint(8) unsigned NOT NULL auto_increment,
  `channelid` smallint(5) unsigned NOT NULL default '0',
  `notename` varchar(50) NOT NULL default '',
  `sourcelang` varchar(10) NOT NULL default 'gb2312',
  `uptime` int(10) unsigned NOT NULL default '0',
  `cotime` int(10) unsigned NOT NULL default '0',
  `pnum` smallint(5) unsigned NOT NULL default '0',
  `isok` tinyint(1) unsigned NOT NULL default '0',
  `usemore` tinyint(1) unsigned NOT NULL default '0',
  `listconfig` text,
  `itemconfig` text,
  PRIMARY KEY  (`nid`),
  KEY `isok` (`isok`,`channelid`,`cotime`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__co_urls`;
CREATE TABLE `#@__co_urls` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `hash` varchar(32) NOT NULL default '',
  `nid` smallint(5) unsigned NOT NULL default '0',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__diyforms`;
CREATE TABLE `#@__diyforms` (
  `diyid` int(10) unsigned NOT NULL auto_increment,
  `name` varchar(50) NOT NULL default '',
  `posttemplate` varchar(50) NOT NULL default '',
  `viewtemplate` varchar(50) NOT NULL default '',
  `listtemplate` varchar(50) NOT NULL default '',
  `table` varchar(50) NOT NULL default '',
  `info` text,
  `public` tinyint(1) NOT NULL default '1',
  PRIMARY KEY  (`diyid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__feedback`;
CREATE TABLE `#@__feedback` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `aid` mediumint(8) unsigned NOT NULL default '0',
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `username` char(20) NOT NULL default '',
  `arctitle` varchar(60) NOT NULL default '',
  `ip` char(15) NOT NULL default '',
  `ischeck` smallint(6) NOT NULL default '0',
  `dtime` int(10) unsigned NOT NULL default '0',
  `mid` mediumint(8) unsigned NOT NULL default '0',
  `bad` mediumint(8) unsigned NOT NULL default '0',
  `good` mediumint(8) unsigned NOT NULL default '0',
  `ftype` set('feedback','good','bad') NOT NULL default 'feedback',
  `face` smallint(5) unsigned NOT NULL default '0',
  `msg` text,
  PRIMARY KEY  (`id`),
  KEY `aid` (`aid`,`ischeck`,`mid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__flink`;
CREATE TABLE `#@__flink` (
  `id` smallint(5) unsigned NOT NULL auto_increment,
  `sortrank` smallint(6) NOT NULL default '0',
  `url` char(60) NOT NULL default '',
  `webname` char(30) NOT NULL default '',
  `msg` char(200) NOT NULL default '',
  `email` char(50) NOT NULL default '',
  `logo` char(60) NOT NULL default '',
  `dtime` int(10) unsigned NOT NULL default '0',
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `ischeck` smallint(6) NOT NULL default '1',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__flink` VALUES (2, 1, 'http://www.dedeeims.com', '织梦EIMS', '', '', '', 1226375403, 1, 2);

DROP TABLE IF EXISTS `#@__flinktype`;
CREATE TABLE `#@__flinktype` (
  `id` mediumint(8) unsigned NOT NULL auto_increment,
  `typename` varchar(50) NOT NULL default '',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__flinktype` VALUES (1, '综合网站'),
(2, '娱乐类'),
(3, '教育类'),
(4, '计算机类'),
(5, '电子商务'),
(6, '网上信息'),
(7, '论坛类'),
(8, '其它类型');

DROP TABLE IF EXISTS `#@__freelist`;
CREATE TABLE `#@__freelist` (
  `aid` int(11) NOT NULL auto_increment,
  `title` varchar(50) NOT NULL default '',
  `namerule` varchar(50) NOT NULL default '',
  `listdir` varchar(60) NOT NULL default '',
  `defaultpage` varchar(20) NOT NULL default '',
  `nodefault` smallint(6) NOT NULL default '0',
  `templet` varchar(50) NOT NULL default '',
  `edtime` int(11) NOT NULL default '0',
  `click` int(11) NOT NULL default '1',
  `listtag` mediumtext,
  `keyword` varchar(100) NOT NULL default '',
  `description` varchar(250) NOT NULL default '',
  PRIMARY KEY  (`aid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__freelist` VALUES (10, 'Google SiteMap 生成器', '{listdir}googlemap_{page}.xml', '{cmspath}', 'index.html', 1, '{style}/googlemap.htm', 1226884666, 0, '{dede:list  pagesize=''500'' col=''1'' titlelen=''60'' orderby=''pubdate'' orderway=''desc'' \r\n channel=''1''  keyword='''' }\r\n   [field:arcurl function="Gmapurl(@me)"/] \r\n   \r\n   \r\n  [field:keywords/]\r\n [field:senddate function="strftime(''%Y-%m-%d'',@me)"/]\r\n \r\n{/dede:list}', '', '');

DROP TABLE IF EXISTS `#@__guestbook`;
CREATE TABLE `#@__guestbook` (
  `id` mediumint(8) unsigned NOT NULL auto_increment,
  `title` varchar(60) NOT NULL default '',
  `tid` mediumint(8) NOT NULL default '0',
  `mid` mediumint(8) unsigned default '0',
  `posttime` int(10) unsigned NOT NULL default '0',
  `uname` varchar(30) NOT NULL default '',
  `email` varchar(50) NOT NULL default '',
  `homepage` varchar(50) NOT NULL default '',
  `qq` varchar(15) NOT NULL default '',
  `tel` varchar(30) NOT NULL default '',
  `fax` varchar(30) NOT NULL default '',
  `face` varchar(10) NOT NULL default '',
  `ip` varchar(20) NOT NULL default '',
  `dtime` int(10) unsigned NOT NULL default '0',
  `ischeck` smallint(6) NOT NULL default '1',
  `msg` text,
  PRIMARY KEY  (`id`),
  KEY `ischeck` (`ischeck`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__homepageset`;
CREATE TABLE `#@__homepageset` (
  `templet` char(50) NOT NULL default '',
  `position` char(30) NOT NULL default ''
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__homepageset` VALUES ('{style}/index.htm', '../index.html');

DROP TABLE IF EXISTS `#@__jobs`;
CREATE TABLE `#@__jobs` (
  `id` mediumint(8) unsigned NOT NULL auto_increment,
  `jobname` varchar(50) NOT NULL default '',
  `lang` varchar(20) NOT NULL default '',
  `neednum` smallint(5) unsigned NOT NULL default '0',
  `needpart` varchar(50) NOT NULL default '',
  `linkman` varchar(50) NOT NULL default '',
  `linktel` varchar(50) NOT NULL default '',
  `email` varchar(50) NOT NULL default '',
  `address` varchar(150) NOT NULL default '',
  `sendtime` int(10) unsigned NOT NULL default '0',
  `exptime` int(10) unsigned default '0',
  `jobneed` text,
  `msg` text,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__keywords`;
CREATE TABLE `#@__keywords` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `keyword` char(16) NOT NULL default '',
  `rank` mediumint(8) unsigned NOT NULL default '0',
  `sta` smallint(6) NOT NULL default '1',
  `rpurl` char(60) NOT NULL default '',
  PRIMARY KEY  (`aid`),
  KEY `keyword` (`keyword`,`rank`,`sta`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__log`;
CREATE TABLE `#@__log` (
  `lid` mediumint(8) unsigned NOT NULL auto_increment,
  `adminid` smallint(8) unsigned NOT NULL default '0',
  `filename` char(60) NOT NULL default '',
  `method` char(10) NOT NULL default '',
  `query` char(200) NOT NULL default '',
  `cip` char(15) NOT NULL default '',
  `dtime` int(10) unsigned NOT NULL default '0',
  PRIMARY KEY  (`lid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__member`;
CREATE TABLE `#@__member` (
  `mid` mediumint(8) unsigned NOT NULL auto_increment,
  `userid` char(30) default NULL,
  `pwd` char(32) NOT NULL default '',
  `uname` char(50) default NULL,
  `sex` tinyint(1) default '0',
  `rank` smallint(5) unsigned NOT NULL default '0',
  `email` char(50) NOT NULL default '',
  `lang` varchar(20) NOT NULL default 'gb2312',
  `company` varchar(100) NOT NULL default '',
  `mobile` varchar(50) NOT NULL default '',
  `tel` varchar(50) NOT NULL default '',
  `fax` varchar(50) NOT NULL default '',
  `address` varchar(250) NOT NULL default '',
  `scores` mediumint(8) unsigned NOT NULL default '0',
  `matt` smallint(5) unsigned NOT NULL default '0',
  `face` char(50) NOT NULL default '',
  `jointime` int(10) unsigned NOT NULL default '0',
  `joinip` char(16) NOT NULL default '',
  `logintime` int(10) unsigned NOT NULL default '0',
  `loginip` char(16) NOT NULL default '',
  PRIMARY KEY  (`mid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__member_pms`;
CREATE TABLE `#@__member_pms` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `floginid` varchar(20) NOT NULL default '',
  `fromid` mediumint(8) unsigned NOT NULL default '0',
  `toid` mediumint(8) unsigned NOT NULL default '0',
  `tologinid` char(20) NOT NULL default '',
  `folder` enum('inbox','outbox') default 'inbox',
  `subject` varchar(60) NOT NULL default '',
  `sendtime` int(10) unsigned NOT NULL default '0',
  `writetime` int(10) unsigned NOT NULL default '0',
  `hasview` tinyint(1) unsigned NOT NULL default '0',
  `isadmin` tinyint(1) NOT NULL default '0',
  `message` text,
  PRIMARY KEY  (`id`),
  KEY `sendtime` (`sendtime`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__member_pwd_tmp`;
CREATE TABLE `#@__member_pwd_tmp` (
  `mid` mediumint(8) NOT NULL default '0',
  `membername` char(16) NOT NULL default '',
  `pwd` char(32) NOT NULL default '',
  `mailtime` int(10) NOT NULL default '0',
  PRIMARY KEY  (`mid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__member_stow`;
CREATE TABLE `#@__member_stow` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `mid` mediumint(8) unsigned NOT NULL default '0',
  `aid` mediumint(8) unsigned NOT NULL default '0',
  `title` char(60) NOT NULL default '',
  `addtime` int(10) unsigned NOT NULL default '0',
  PRIMARY KEY  (`id`),
  KEY `uid` (`mid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__myad`;
CREATE TABLE `#@__myad` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `tagname` varchar(30) NOT NULL default '',
  `adname` varchar(60) NOT NULL default '',
  `timeset` smallint(6) NOT NULL default '0',
  `starttime` int(10) unsigned NOT NULL default '0',
  `endtime` int(10) unsigned NOT NULL default '0',
  `normbody` text,
  `expbody` text,
  PRIMARY KEY  (`aid`),
  KEY `tagname` (`tagname`,`typeid`,`timeset`,`endtime`,`starttime`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__mylang`;
CREATE TABLE `#@__mylang` (
  `id` mediumint(8) NOT NULL auto_increment,
  `lang` varchar(20) NOT NULL default '',
  `eid` varchar(30) NOT NULL default '',
  `cid` varchar(50) NOT NULL default '',
  `langtxt` text,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__mytag`;
CREATE TABLE `#@__mytag` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `typeid` smallint(5) unsigned NOT NULL default '0',
  `tagname` varchar(30) NOT NULL default '',
  `timeset` smallint(6) NOT NULL default '0',
  `starttime` int(10) unsigned NOT NULL default '0',
  `endtime` int(10) unsigned NOT NULL default '0',
  `normbody` text,
  `expbody` text,
  PRIMARY KEY  (`aid`),
  KEY `tagname` (`tagname`,`typeid`,`timeset`,`endtime`,`starttime`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__plus`;
CREATE TABLE `#@__plus` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `plusname` varchar(30) NOT NULL default '',
  `menustring` varchar(200) NOT NULL default '',
  `mainurl` varchar(50) NOT NULL default '',
  `writer` varchar(30) NOT NULL default '',
  `isshow` smallint(6) NOT NULL default '1',
  `filelist` text,
  PRIMARY KEY  (`aid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__plus` (`aid`, `plusname`, `menustring`, `mainurl`, `writer`, `isshow`, `filelist`) VALUES
(27, '友情链接插件', '<m:item name=''友情链接'' link=''friendlink_main.php'' rank=''plus_友情链接'' target=''main'' />', '', '织梦团队', 1, ''),
(24, '文件管理器', '<m:item name=''文件管理器'' link=''file_manage_main.php'' rank=''plus_文件管理器'' target=''main'' />', '', '织梦团队', 1, ''),
(28, '投票插件', '<m:item name=''投票插件'' link=''vote_main.php'' rank=''plus_投票插件'' target=''main'' />', '', '织梦团队', 1, ''),
(25, '广告管理', '<m:item name=''广告管理'' link=''ad_main.php'' rank=''plus_广告管理'' target=''main'' />', '', '织梦官方', 1, ''),
(29, '留言簿插件', '<m:item name=''留言簿插件'' link=''catalog_do.php?dopost=guestbook'' rank=''plus_留言簿插件'' target=''main'' />', '', '织梦团队', 1, '');

DROP TABLE IF EXISTS `#@__search_keywords`;
CREATE TABLE `#@__search_keywords` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `keyword` char(30) NOT NULL default '',
  `spwords` char(50) NOT NULL default '',
  `count` mediumint(8) unsigned NOT NULL default '1',
  `result` mediumint(8) unsigned NOT NULL default '0',
  `lasttime` int(10) unsigned NOT NULL default '0',
  `channelid` smallint(5) unsigned NOT NULL default '0',
  `typeid` smallint(5) unsigned NOT NULL default '0',
  PRIMARY KEY  (`aid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__sgpage`;
CREATE TABLE `#@__sgpage` (
  `aid` smallint(5) unsigned NOT NULL auto_increment,
  `title` varchar(60) NOT NULL default '',
  `ismake` smallint(6) NOT NULL default '1',
  `filename` varchar(60) NOT NULL default '',
  `keywords` varchar(30) NOT NULL default '',
  `template` varchar(30) NOT NULL default '',
  `likeid` varchar(20) NOT NULL default '',
  `description` varchar(250) NOT NULL default '',
  `uptime` int(10) unsigned NOT NULL default '0',
  `body` mediumtext,
  PRIMARY KEY  (`aid`),
  KEY `ismake` (`ismake`,`uptime`),
  KEY `likeid` (`likeid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__sysconfig`;
CREATE TABLE `#@__sysconfig` (
  `aid` smallint(8) unsigned NOT NULL default '0',
  `varname` varchar(20) NOT NULL default '',
  `info` varchar(100) NOT NULL default '',
  `groupid` smallint(6) NOT NULL default '1',
  `type` varchar(10) NOT NULL default 'string',
  `value` text,
  PRIMARY KEY  (`varname`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;


INSERT INTO `#@__sysconfig` VALUES (1, 'cfg_basehost', '站点根网址', 1, 'string', ''),
(2, 'cfg_cmspath', 'DedeEIMS安装目录', 2, 'string', ''),
(3, 'cfg_cookie_encode', 'cookie加密码', 2, 'string', ''),
(5, 'cfg_backup_dir', '数据备份目录（在data目录内）', 2, 'string', 'backupdata'),
(7, 'cfg_webname', '网站名称', 1, 'string', 'Dede企业建站平台'),
(8, 'cfg_adminemail', '网站发信EMAIL', 2, 'string', ''),
(9, 'cfg_html_editor', 'Html编辑器选项（目前仅支持fck）', 2, 'string', 'fck'),
(10, 'cfg_arcdir', '文档HTML默认保存路径', 1, 'string', '/a'),
(11, 'cfg_medias_dir', '图片/上传文件默认路径', 1, 'string', '/uploads'),
(12, 'cfg_ddimg_width', '缩略图默认宽度', 3, 'number', '300'),
(13, 'cfg_ddimg_height', '缩略图默认高度', 3, 'number', '240'),
(63, 'cfg_album_width', '图集默认显示图片的大小', 3, 'number', '800'),
(15, 'cfg_imgtype', '图片浏览器文件类型', 3, 'string', 'jpg|gif|png'),
(16, 'cfg_softtype', '允许上传的软件类型', 3, 'bstring', 'zip|gz|rar|iso|doc|xsl|ppt|wps'),
(17, 'cfg_mediatype', '允许的多媒体文件类型', 3, 'bstring', 'swf|mpg|mp3|rm|rmvb|wmv|wma|wav|mid|mov'),
(18, 'cfg_specnote', '专题的最大节点数', 2, 'number', '6'),
(19, 'cfg_list_symbol', '栏目位置的间隔符号', 2, 'string', ' > '),
(20, 'cfg_notallowstr', '禁用词语（系统将直接停止用户动作）
用|分开，但不要在结尾加|', 7, 'bstring', '艾滋病|阳痿'),
(21, 'cfg_feedbackcheck', '评论及留言(是/否)需审核', 7, 'bool', 'N'),
(22, 'cfg_keyword_replace', '关键字替换(是/否)使用本功能会影响HTML生成速度', 2, 'bool', 'Y'),
(23, 'cfg_fck_xhtml', '编辑器(是/否)使用XHTML', 1, 'bool', 'N'),
(24, 'cfg_df_style', '模板默认风格', 1, 'string', 'default'),
(25, 'cfg_multi_site', '(是/否)支持多站点，开启此项后附件、栏目连接、arclist内容启用绝对网址', 2, 'bool', 'N'),
(58, 'cfg_rm_remote', '远程图片本地化', 7, 'bool', 'Y'),
(27, 'cfg_dede_log', '(是/否)开启管理日志', 2, 'bool', 'N'),
(28, 'cfg_powerby', '网站版权、编译JS等底部调用信息', 1, 'bstring', 'Copyright ? 2004-2009 DedeEIMS. 织梦科技 版权所有'),
(29, 'cfg_arcsptitle', '(是/否)开启分页标题，开启会影响HTML生成速度', 6, 'bool', 'N'),
(30, 'cfg_arcautosp', '(是/否)开启长文章自动分页', 6, 'bool', 'N'),
(31, 'cfg_arcautosp_size', '文章自动分页大小（单位: K）', 6, 'number', '5'),
(32, 'cfg_auot_description', '自动摘要长度（0-250，0表示不启用）', 7, 'number', '240'),
(33, 'cfg_ftp_host', 'FTP主机', 2, 'string', ''),
(34, 'cfg_ftp_port', 'FTP端口', 2, 'number', '21'),
(35, 'cfg_ftp_user', 'FTP用户名', 2, 'string', ''),
(36, 'cfg_ftp_pwd', 'FTP密码', 2, 'string', ''),
(37, 'cfg_ftp_root', '网站根在FTP中的目录', 2, 'string', '/'),
(38, 'cfg_ftp_mkdir', '是否强制用FTP创建目录', 2, 'bool', 'N'),
(39, 'cfg_feedback_ck', '评论加验证码重确认', 7, 'bool', 'N'),
(40, 'cfg_list_son', '上级列表是否包含子类内容', 6, 'bool', 'Y'),
(41, 'cfg_mb_open', '是否开启会员功能', 4, 'bool', 'Y'),
(47, 'cfg_cli_time', '服务器时区设置', 2, 'number', '8'),
(20, 'cfg_replacestr', '替换词语（词语会被替换成***）
用|分开，但不要在结尾加|', 7, 'bstring', '她妈|它妈|他妈|你妈|去死|贱人'),
(50, 'cfg_makeindex', '发布文档后自动更新网站主页', 6, 'bool', 'N'),
(51, 'cfg_keyword_like', '使用关键词关连文章', 6, 'bool', 'N'),
(52, 'cfg_index_max', '网站主页调用函数最大索引文档数
不适用于经常单栏目采集过多内容的网站
不启用本项此值设置为0即可', 6, 'number', '10000'),
(53, 'cfg_index_cache', 'arclist标签调用缓存
(0 不启用，大于0值为多少秒)', 6, 'number', '7200'),
(54, 'cfg_tplcache', '是否启用模板缓存', 6, 'bool', 'Y'),
(55, 'cfg_tplcache_dir', '模板缓存目录', 6, 'string', '/data/tplcache'),
(56, 'cfg_makesign_cache', '发布/修改单个文档是否使用调用缓存', 6, 'bool', 'N'),
(59, 'cfg_arc_dellink', '删除非站内链接', 7, 'bool', 'Y'),
(60, 'cfg_arc_autopic', '提取第一张图片作为缩略图', 7, 'bool', 'Y'),
(61, 'cfg_arc_autokeyword', '自动提取关键字', 7, 'bool', 'Y'),
(62, 'cfg_title_maxlen', '文档标题最大长度
改此参数后需要手工修改数据表', 7, 'number', '60'),
(64, 'cfg_check_title', '发布文档时是否检测重复标题', 7, 'bool', 'Y'),
(65, 'cfg_album_row', '图集多行多列样式默认行数', 3, 'number', '3'),
(66, 'cfg_album_col', '图集多行多列样式默认列数', 4, 'number', '3'),
(67, 'cfg_album_pagesize', '图集多页多图每页显示最大数', 3, 'number', '12'),
(68, 'cfg_album_style', '图集默认样式
1为多页多图,2为多页单图,3为缩略图列表', 3, 'number', '2'),
(69, 'cfg_album_ddwidth', '图集默认缩略图大小', 3, 'number', '200'),
(70, 'cfg_mb_notallow', '不允许注册的会员id', 4, 'bstring', 'www,bbs,ftp,mail,user,users,admin,administrator'),
(71, 'cfg_mb_idmin', '用户id最小长度', 4, 'number', '3'),
(72, 'cfg_mb_pwdmin', '用户密码最小长度', 4, 'number', '3'),
(73, 'cfg_md_idurl', '是否严格限定会员登录id
允许会员使用二级域名必须设置此项', 4, 'bool', 'N'),
(74, 'cfg_mb_rank', '注册会员默认级别
[会员权限管理中]查看级别代表的数字', 4, 'number', '10'),
(76, 'cfg_feedback_time', '两次评论至少间隔时间(秒钟)', 7, 'number', '10'),
(77, 'cfg_feedback_numip', '每个IP一小时内最大评论数', 7, 'number', '100'),
(78, 'cfg_md_mailtest', '是否限制Email只能注册一个帐号', 4, 'bool', 'Y'),
(86, 'cfg_sendfb_scores', '参与评论可获积分', 7, 'number', '3'),
(92, 'cfg_search_max', '最大搜索检查文档数', 6, 'number', '50000'),
(93, 'cfg_search_maxrc', '最大返回搜索结果数', 6, 'number', '300'),
(94, 'cfg_search_time', '搜索间隔时间(秒/对网站所有用户)', 6, 'number', '3'),
(223, 'cfg_smtp_port', 'smtp服务器端口', 2, 'string', '25'),
(221, 'cfg_sendmail_bysmtp', '是否启用smtp方式发送邮件', 2, 'bool', 'N'),
(222, 'cfg_smtp_server', 'smtp服务器', 2, 'string', 'smtp.xinhuanet.com'),
(224, 'cfg_smtp_usermail', 'SMTP服务器的用户邮箱', 2, 'string', ''),
(225, 'cfg_smtp_user', 'SMTP服务器的用户帐号', 2, 'string', ''),
(226, 'cfg_smtp_password', 'SMTP服务器的用户密码', 2, 'string', ''),
(706, 'cfg_upload_switch', '删除文章文件同时删除相关附件文件', 2, 'bool', 'Y'),
(708, 'cfg_rewrite', '是否使用伪静态', 2, 'bool', 'N'),
(707, 'cfg_allsearch_limit', '网站全局搜索时间限制', 2, 'string', '1'),
(709, 'cfg_delete', '文章回收站(是/否)开启', 2, 'bool', 'Y'),
(710, 'cfg_keywords', '站点默认关键字', 1, 'string', ''),
(711, 'cfg_description', '站点描述', 1, 'bstring', ''),
(712, 'cfg_beian', '网站备案号', 1, 'string', ''),
(713, 'cfg_need_typeid2', '是否启用副栏目', 6, 'bool', 'N'),
(715, 'cfg_mb_pwdtype', '前台密码验证类型：默认32 — 32位md5，可选：
l16 — 前16位， r16 — 后16位， m16 — 中间16位', 4, 'string', '32'),
(716, 'cfg_cache_type', 'id 文档ID，content 标签最终内容
(修改此变量后必须更新系统缓存)', 6, 'string', 'id'),
(718, 'cfg_replace_num', '文档内容同一关键词替换次数(0为全部替换)', 7, 'number', '2'),
(719, 'cfg_df_lang', '入口默认语言', 1, 'string', 'gb2312'),
(720, 'cfg_addon_savetype', '附件保存形式', 3, 'string', 'ymd');

DROP TABLE IF EXISTS `#@__uploads`;
CREATE TABLE `#@__uploads` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `arcid` mediumint(8) unsigned NOT NULL default '0',
  `title` char(60) NOT NULL default '',
  `url` char(80) NOT NULL default '',
  `mediatype` smallint(6) NOT NULL default '1',
  `width` char(10) NOT NULL default '',
  `height` char(10) NOT NULL default '',
  `playtime` char(10) NOT NULL default '',
  `filesize` mediumint(8) unsigned NOT NULL default '0',
  `uptime` int(10) unsigned NOT NULL default '0',
  `mid` mediumint(8) unsigned NOT NULL default '0',
  PRIMARY KEY  (`aid`),
  KEY `memberid` (`mid`),
  KEY `arcid` (`arcid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__vote`;
CREATE TABLE `#@__vote` (
  `aid` mediumint(8) unsigned NOT NULL auto_increment,
  `lang` varchar(20) NOT NULL default 'gb2312',
  `votename` varchar(50) NOT NULL default '',
  `starttime` int(10) unsigned NOT NULL default '0',
  `endtime` int(10) unsigned NOT NULL default '0',
  `totalcount` mediumint(8) unsigned NOT NULL default '0',
  `ismore` tinyint(6) NOT NULL default '0',
  `votenote` text,
  PRIMARY KEY  (`aid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

INSERT INTO `#@__vote` VALUES('1','gb2312','你是从哪儿得知本站的？','1150646400','1268928000','8','0','<v:note id=\'1\' count=\'3\'>朋友介绍2</v:note>\r\n<v:note id=\'2\' count=\'0\'>门户网站的搜索引擎</v:note>\r\n<v:note id=\'3\' count=\'5\'>Google或百度搜索</v:note>\r\n<v:note id=\'4\' count=\'3\'>别的网站上的链接</v:note>\r\n<v:note id=\'5\' count=\'1\'>其它途径</v:note>');
INSERT INTO `#@__vote` VALUES('2','en','How to know our website?','1150646400','1268928000','8','0','<v:note id=\'1\' count=\'3\'>Friends</v:note>\r\n<v:note id=\'2\' count=\'0\'>Ad portal</v:note>\r\n<v:note id=\'3\' count=\'5\'>Google Or Baidu</v:note>\r\n<v:note id=\'4\' count=\'3\'>Links to other sites</v:note>\r\n<v:note id=\'5\' count=\'1\'>Other ways</v:note>');
INSERT INTO `#@__vote` VALUES('3','big5','你是從哪兒得知本站的？','1150646400','1268928000','8','0','<v:note id=\'1\' count=\'3\'>朋友介紹</v:note>\r\n<v:note id=\'2\' count=\'0\'>門戶網站的廣告</v:note>\r\n<v:note id=\'3\' count=\'5\'>Google或百度搜索</v:note>\r\n<v:note id=\'4\' count=\'3\'>別的網站上的鏈接</v:note>\r\n<v:note id=\'5\' count=\'1\'>其它途徑 </v:note>');

DROP TABLE IF EXISTS `#@__product_orders`;
CREATE TABLE `#@__product_orders` (
  `id` mediumint(8) NOT NULL auto_increment,
  `oid` varchar(100) character set utf8 NOT NULL,
  `aid` mediumint(8) NOT NULL,
  `status` int(3) NOT NULL default '0',
  `mid` int(10) NOT NULL default '0',
  `dateline` int(10) NOT NULL default '0',
  `uptime` int(10) NOT NULL default '0',
  `userip` char(15) character set utf8 NOT NULL,
  `telphone` varchar(50) character set utf8 NOT NULL,
  `prnums` int(10) NOT NULL default '0',
  `orgname` char(80) character set utf8 NOT NULL,
  `address` varchar(200) character set utf8 NOT NULL,
  `postcode` char(20) character set utf8 NOT NULL,
  `content` text character set utf8 NOT NULL,
  PRIMARY KEY  (`id`),
  KEY `aid` (`aid`,`mid`),
  KEY `dateline` (`dateline`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `#@__product_orders_logs`;
CREATE TABLE `#@__product_orders_logs` (
  `ordersid` mediumint(8) NOT NULL,
  `dateline` int(10) NOT NULL,
  `message` text character set utf8 NOT NULL,
  `operator` char(15) character set utf8 NOT NULL,
  KEY `ordersid` (`ordersid`),
  KEY `dateline` (`dateline`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;';
?>